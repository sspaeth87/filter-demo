
package de.xdevsoftware.filterdemo.ui;

import java.util.Arrays;

import com.rapidclipse.framework.server.resources.CaptionUtils;
import com.rapidclipse.framework.server.ui.filter.FilterComponent;
import com.rapidclipse.framework.server.ui.filter.GridFilterSubjectFactory;
import com.vaadin.flow.component.grid.Grid;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.data.provider.DataProvider;
import com.vaadin.flow.router.Route;
import com.vaadin.flow.theme.Theme;
import com.vaadin.flow.theme.lumo.Lumo;

import de.xdevsoftware.filterdemo.dal.ComputerDAO;
import de.xdevsoftware.filterdemo.domain.Computer;


@Route("")
@Theme(value = Lumo.class, variant = Lumo.LIGHT)
public class MainLayout extends VerticalLayout
{
	public MainLayout()
	{
		super();
		this.initUI();
	}

	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.filterComponent = new FilterComponent();
		this.grid            = new Grid<>(Computer.class, false);

		this.grid.addColumn(Computer::getComputerName).setKey("computerName")
			.setHeader(CaptionUtils.resolveCaption(Computer.class, "computerName")).setSortable(true);
		this.grid.addColumn(Computer::getIpAddressTransient).setKey("ipAddressTransient")
			.setHeader(CaptionUtils.resolveCaption(Computer.class, "ipAddressTransient")).setSortable(true);
		this.grid.addColumn(Computer::getIpAddressTransient2).setKey("ipAddressTransient2")
			.setHeader(CaptionUtils.resolveCaption(Computer.class, "ipAddressTransient2")).setSortable(true);
		this.grid.addColumn(Computer::getIpAddressTransient3).setKey("ipAddressTransient3")
			.setHeader(CaptionUtils.resolveCaption(Computer.class, "ipAddressTransient3")).setSortable(true);
		this.grid.setDataProvider(DataProvider.ofCollection(ComputerDAO.INSTANCE.findAll()));
		this.grid.setSelectionMode(Grid.SelectionMode.SINGLE);

		this.filterComponent.connectWith(this.grid.getDataProvider());
		this.filterComponent.setFilterSubject(GridFilterSubjectFactory.CreateFilterSubject(this.grid,
			Arrays.asList("computerName", "ipAddressTransient", "ipAddressTransient2", "ipAddressTransient3"),
			Arrays.asList("computerName", "ipAddressTransient", "ipAddressTransient2", "ipAddressTransient3")));

		this.filterComponent.setWidthFull();
		this.filterComponent.setHeight(null);
		this.grid.setSizeFull();
		this.add(this.filterComponent, this.grid);
		this.setFlexGrow(1.0, this.grid);
		this.setSizeFull();
	} // </generated-code>
	
	// <generated-code name="variables">
	private FilterComponent filterComponent;
	private Grid<Computer>  grid;
	// </generated-code>

}
